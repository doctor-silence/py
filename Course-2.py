#Напишите программу, которая первым аргументом командной строки принимает целое число, а после выводит квадратный корень из этого числа, 
# само число и число возведенное в квадрат. Все значения должны быть разделены точкой с запятой.

from dis import dis
import sys
from xml.sax.handler import feature_validation

number = sys.argv[1]

number = int(number)

number_1 = int(number ** 0.5)
number_2 = int(number) ** 2

print(str(number_1) + ';' +str(number) + ';' + str(number_2))

# Напишите программу, которая из первого аргумента командной строки принимает массу тела в кг, а из второго высоту тела над нулевым уровнем в метрах. 
# После программа должна посчитать и вывести потенциальную энергию этого тела. Величину ускорения свободного падения возьмите за 9.8.
# Масса и высота могут быть вещественными числами.
# Результат преобразуйте к целому числу.

m = '10'
h = '10'
g = 9.8

Ep = float(m) * g * float(h)

print(int(Ep))


# Начинающий разработчик написал программу для расчета стоимости заправки автомобиля до полного бака. 
# Программа принимает три параметра: цену 1 литра бензина, полный объем бензобака и объем уже залитого топлива в бак.

# Однако программа не работает как было запланировано и выводит неверные данные
# Исправьте все ошибки в коде.

price = float('45.2')
full = float('50')
busy = float('11.7')

# Делаем финальный расчет.
amount = (full - busy) * price

# Выводим результат.
print(amount)


# Напишите программу, которая принимает из аргументов командной строки два параметра: курс доллара и количество долларов, 
# а затем выводит следующую фразу: «N долларов в рублях = M руб.», где N — это количество долларов, а M — количество рублей по текущему курсу.
# Склонением существительных в этой задаче можно пренебречь.

# Обратите внимание, что курс доллара передается с запятой в качестве разделителя (64,66), 
# однако в Python к вещественным числам можно преобразовывать только строки с точкой (64.66).
# Также учитывайте, что количество долларов является целым числом.

N = 12
M = '64,66'

N = int(N)
M = float(M.replace(',', '.'))

resalt = N * M 
resalt = str(resalt)


print(str(N) + ' долларов в рублях = ' + resalt + ' руб.')

#Напишите программу, которая принимает из аргументов командной строки два параметра: расстояние и время, за которое было пройдено данное расстояние. 
# Программа должна рассчитать и вывести скорость движения в км/ч с двумя знаками после десятичной точки.

#Передаваемые параметры могут быть как целыми, так и вещественными числами. Расстояние передается в километрах, а время в часах.

#При форматировании вещественных чисел используется следующий спецификатор: %.Nf, где N — это число знаков после десятичной точки.

distance = 60.2
time = 1.5

speed = distance / time

print('%.2f'%speed)

#Напишите программу, которая принимает из аргументов командной строки три параметра: температуру на начало периода, температуру на конец периода и скорость ветра. 
# Все параметры передаются в виде вещественных чисел.

#Программа должна вывести строку в следующем виде: «A°…B°, C м/с», где A - это температура на начало периода, 
# B — температура на конец периода и C — скорость ветра. Для вывода температуры используйте только целую часть числа, 
# а при выводе скорости ветра оставьте только один знак после десятичной точки.

#Обратите внимание на символ градуса °, а также на троеточие … в предлагаемом шаблоне. Это специальные символы, копируйте их прямо из текста задачи.

A = float(17)
B = float(22.5)
C = float(7.5)

print('%+.d°…%+.d°, %.1f м/с' %(A,B,C))

# Напишите программу, которая принимает из аргументов командной строки один параметр: итоговую сумму, представленную целым числом. 
# Программа должна вывести фразу «Итого: A руб.», где A — это целое число, выровненное по правому краю с пробелами слева. 
# Общая длина A должна быть 7 знаков. Обратите внимание, что между Итого: и А руб. стоит пробел, который не входит в состав 7 знаков, 
# выделенных под A.

A = 1200
A = str(A).rjust(7 ,' ')

print('Итого: ' + A +' руб.')

# Напишите программу для формирования строки счета на оплату. Программа должна принимать из аргументов командной строки 3 параметра: наименование товара, 
# количество и цену, а после выводить строку следующего вида: | <наименование> | <количество> | <цена> | <сумма> |.
# Количество и цена могут передаваться как в виде целых чисел, так и в виде вещественных.

# Используйте следующие правила для настройки спецификаторов:

# <наименование> должно быть выровнено по левому краю и в общей сложности занимать 30 символов.
# <количество> должно быть выровнено по левому краю и в общей сложности занимать 6 символов.
# Количество нужно выводить как целое число.
# <цена> должна быть выровнена по левому краю и в общей сложности занимать 10 символов.
# Цену нужно выводить в виде вещественного числа с двумя знаками после десятичной точки.
# <сумма> должна быть выровнена по правому краю и в общей сложности занимать 12 символов.
# Сумму нужно выводить в виде вещественного числа с двумя знаками после десятичной точки.
# Обратите внимание, что сумма не передается. Её нужно рассчитать в программе.

name = 'Товар'
amount = 13
price = 257.23

summ = amount * price

name = '| %-30s |' % name
amount = '%-6d |' % amount
price = '%-10.2f |' % price
summ = '%12.2f |' % summ 

print(name,amount, price, summ)

#Напишите программу, которая получает из первого аргумента командной строки текст, а затем выравнивает его по центру в прямоугольном блоке шириной 31 символов. 
# Обратите внимание, что под сам текст нужно выделить 27 символов, остальные 4 должны быть зарезервированы за пробелом и вертикальной чертой.

name = "Main header"

name_second = '{:^27}'.format(name)

print("+" + "-" * len(name_second) + "+")
print('|' + name_second +'|')
print("+" + "-" * len(name_second) + "+")



#print("{line}\n| {:^27s} |\n{line}".format(name, line="+{}+".format("-" * 29)))

#Напишите программу, которая получает первым аргументом командной строки текст, а после обрезает его до 10 символов и добавляет в конец три точки.

text = "I am a good programmer"
dot = '...'

print('{:.10s}{}'.format(text, dot))

#print("{:.10s}...".format(text))


#В конце нужно вывести средний балл на конец периода и разницу между двумя переданными числами. 
#Если разница положительная, то впереди должен стоять +, а если отрицательная, то минус. 
#Все числа нужно выводить с двумя знаками после десятичной точки.


start = 8.741
end = 8.85 
resalt = end - start

print('{:.2f}{:+.2f}'.format(end, resalt))


#Напишите программу, которая принимает из первого аргумента командной строки вещественное число, 
# а затем выводит его в следующем формате: число должно выводится с двумя знаками после десятичной точки, под целую нужно выделить 5 знаков. 
# Если целая часть меньше 10000, то слева нужно дополнить его нулями: 123 -> 00123.
#  Далее полученный результат должен помещаться в строку длиной 16 символов выравниванием по правому краю с точкой в качестве заполнителя.


number = 178.451

num_1 = '{:0>8.2f}'.format(number)

print('{:.>16}'.format(num_1))

# Напишите программу, которая выведет текущую дату и время в формате: ДД.ММ.ГГГГ.


from datetime import datetime

# Создаем переменную now типа date.
# Переменная now хранит текущую дату.
now = datetime.now()

# Вывод текущей даты. 
# По умолчанию она будет выведена в формате ГГГГ-ММ-ДД.
print('{:%d.%m.%Y}'.format(now))


#Напишите программу , которая получает из первого аргумента командной строки целое число, а после печатает его в разных системах счисления.

#Результаты должны быть разделены между собой пробелами и идти в следующем порядке: десятичное число, двоичное число, 
# восьмеричное число, шестнадцатеричное число.

number = 10

num_1 = '{:d}'.format(number)
num_2 = '{:b}'.format(number)
num_3 = '{:o}'.format(number)
num_4 = '{:x}'.format(number)

print(num_1,num_2,num_3,num_4)


#print("{:d} {:b} {:o} {:x}".format(number, number, number, number))


#Напишите программу, которая получает из первого аргумента командной строки число, после разбивает это число пробелами на классы, 
# а затем печатает результат.

number = 1212412354

print('{:,}'.format(number).replace(',' ,' '))

#Рядом с программой находится файл language.txt, в котором содержится текст в кодировке cp1251.
#Напишите программу, которая читает файл и выводит его содержимое.

text = open('language.txt', encoding='cp1251')

text_read = text.read()

print(text_read)


#Рядом с программой находится файл month_salary.txt, в котором хранится месячная зарплата.
#Напишите программу, которая читает этот файл и выводит на его основе годовую зарплату.

month_salary = open('month_salary.txt')

month_salary_read = month_salary.read()
salary_year = int(month_salary_read) * 12 

print(salary_year)


#Рядом с программой находится файл template.txt, в котором хранится шаблон текста.
#В шаблоне есть текст вида {{ name }}, который нужно заменить на реальное имя пользователя.

#Напишите программу, которая принимает из первого аргумента командной строки имя пользователя, 
# а затем подставляет его в шаблон и выводит результат.



name = 'Иван'

text = open('template.txt')
text_read = text.read()
resalt = text_read.replace('{{ name }}', name)

print(resalt)


#Рядом с программой находится файл со списком продуктов products.txt.
#Напишите программу, которая добавляет в этот файл два новых продукта: Масло и Мясо.
#Записи должны добавляться с новой строки каждая.
#В исходном файле продукты также записаны с новой строки, при этом после последней записи перевода строки нет.

file = open('products.txt', 'a')
add = file.write('\n Масло\n Мясо.')

print = (add)

#Рядом с программой находятся два файла: products.txt и new_products.txt.
#Первый сохранен в кодировке cp1251, а второй в koi8-r.

#Напишите программу, которая копирует список продуктов из файла new_products.txt в products.txt.
#Все товары в  исходных файлах записаны с новой строки, при этом после последней записи также стоит перевод строки.

file = open('new_products.txt', encoding='koi8-r')
file_read = file.read()
file_2 = open('products.txt', 'a', encoding='cp1251')
file_2_read = file_2.write(file_read)

print(file_2_read)

#Напишите программу, которая создает файл index.html и добавляет в него следующую строку:
#<html><head></head><body></body></html>.

file = open('index.html', 'w')

file_add = file.write('<html><head></head><body></body></html>')


#Рядом с программой находится файл template.txt, в котором хранится шаблон текста.
#В шаблоне есть текст вида {{ name }}, который нужно заменить на реальное имя пользователя.

#Напишите программу, которая принимает из первого аргумента командной строки имя пользователя, 
# а затем подставляет его в шаблон и записывает результат в файл.

name = 'Игорь'
file = open('template.txt','r')
file_read = file.read()

file_replace = file_read.replace('{{ name }}', name)

file.close()

file_2 = open('template.txt', 'w')
file_write = file_2.write(file_replace)

print(file_write)

#Рядом с программой находятся 4 файла: q1.txt, q2.txt, q3.txt и q4.txt.
#Каждый файл содержит целое число — квартальную прибыль компании.

#Напишите программу, которая читает все квартальные отчеты, суммирует результат и сохраняет его в файл year.txt.

file_1 = open('q1.txt','r')
file_1_read = file_1.read()
file_2 = open('q2.txt', 'r')
file_2_read = file_2.read()
file_3 = open('q3.txt', 'r')
file_3_read = file_3.read()
file_4 = open('q4.txt', 'r')
file_4_read = file_4.read()

summ = int(file_1_read) + int(file_2_read) + int(file_3_read) + int(file_4_read)

resalt = open('year.txt', 'w')
resalt_new = resalt.write(str(summ))
print(resalt_new)


#Рядом с программой находится файл products.txt в кодировке cp1251.
#Напишите программу, которая перекодирует его в кодировку utf-8.

file = open('products.txt', 'r', encoding='cp1251')
file_read = file.read()
file.close()

file = open('products.txt', 'w', encoding='utf-8')
file_write = file.write(file_read)
file.close()

#В программе ниже заданы два списка: с именами и фамилиями. Расширьте код так, чтобы программа принимала из командной строки два аргумента: 
# номер имени и номер фамилии, а затем выводила сгенерированную на основе списков строку вида ИМЯ ФАМИЛИЯ.

#Обратите внимание, что передаваться в программу будут номера имен и фамилий так, как будто они начинаются с единицы. 
# То есть имя «Иван» имеет номер 1, а «Василий» - 4.


number_name = '1'
number_last_name = '1'

first_names = ['Иван', 'Пётр', 'Дмитрий', 'Василий']
last_names = ['Антонов', 'Шмидт', 'Лебедев', 'Васильев', 'Шиков']
number_name = int(number_name)
number_last_name = int(number_last_name)

resalt_name = first_names[number_name - 1]
resalt_last_name = last_names[number_last_name - 1]

print(resalt_name.upper() + ' ' + resalt_last_name.upper())


#Напишите программу, которая принимает из аргументов командной строки индекс элемента списка languages, а также новое значение, 
# которое должно быть размещено на позиции переданного индекса. После замены элемента, программа должна вывести список в консоль.

number = '1'
lang = 'PHP'

languages = ['Python', 'C++', 'JavaScript', 'Java']
number = int(number)

languages[number] = lang

print(languages)

#Напишите программу, которая принимает из аргументов командной строки два числа, а затем меняет в списке languages значения, 
# которые находятся на индексах, соответствующих переданным числам.


number = '0'
lang = '1'
languages = ['Python', 'C++', 'JavaScript', 'Java']
languages[int(number)],languages[int(lang)] = languages[int(lang)],languages[int(number)]

print(languages)


#Напишите программу, которая создает и заполняет список значениями по умолчанию. Первым аргументом программа должна принимать строку, 
# которая будет помещена в список, а вторым число повторений этой строки. В конце программа должна вывести полученный список.

text = 'blank'
number = '5'

list = [text] * int(number)

print(list)


#В программе ниже создан список содержащий города. Программа принимает из аргументов командной строки дополнительные города. 
# Расширьте список cities новыми городами и выведите его.


#Напишите программу, которая принимает из аргументов командной строки список спортсменов, а затем выводит первую тройку.


sportsmen = ['Ильин Петров Зинько Сидоров Васильев Литвинов']

print(sportsmen[0:3])

